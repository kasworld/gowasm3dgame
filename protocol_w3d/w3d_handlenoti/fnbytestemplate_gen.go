// Code generated by "genprotocol.exe -ver=a99e26984c4d0465e81623a4767d3a2aa3cb4fcc9890904054c0c51f30e0b79f -basedir=protocol_w3d -prefix=w3d -statstype=int"

package w3d_handlenoti

/* bytes base demux fn map template

var DemuxNoti2ByteFnMap = [...]func(me interface{}, hd w3d_packet.Header, rbody []byte) error {
w3d_idnoti.Invalid : bytesRecvNotiFn_Invalid,// Invalid not used, make empty packet error
w3d_idnoti.StageInfo : bytesRecvNotiFn_StageInfo,// StageInfo for client display
w3d_idnoti.StageChat : bytesRecvNotiFn_StageChat,// StageChat broadcasted chat

}

	// Invalid not used, make empty packet error
	func bytesRecvNotiFn_Invalid(me interface{}, hd w3d_packet.Header, rbody []byte) error {
		robj, err := w3d_json.UnmarshalPacket(hd, rbody)
		if err != nil {
			return fmt.Errorf("Packet type miss match %v", rbody)
		}
		recved , ok := robj.(*w3d_obj.NotiInvalid_data)
		if !ok {
			return fmt.Errorf("packet mismatch %v", robj )
		}
		return fmt.Errorf("Not implemented %v", recved)
	}

	// StageInfo for client display
	func bytesRecvNotiFn_StageInfo(me interface{}, hd w3d_packet.Header, rbody []byte) error {
		robj, err := w3d_json.UnmarshalPacket(hd, rbody)
		if err != nil {
			return fmt.Errorf("Packet type miss match %v", rbody)
		}
		recved , ok := robj.(*w3d_obj.NotiStageInfo_data)
		if !ok {
			return fmt.Errorf("packet mismatch %v", robj )
		}
		return fmt.Errorf("Not implemented %v", recved)
	}

	// StageChat broadcasted chat
	func bytesRecvNotiFn_StageChat(me interface{}, hd w3d_packet.Header, rbody []byte) error {
		robj, err := w3d_json.UnmarshalPacket(hd, rbody)
		if err != nil {
			return fmt.Errorf("Packet type miss match %v", rbody)
		}
		recved , ok := robj.(*w3d_obj.NotiStageChat_data)
		if !ok {
			return fmt.Errorf("packet mismatch %v", robj )
		}
		return fmt.Errorf("Not implemented %v", recved)
	}

*/
