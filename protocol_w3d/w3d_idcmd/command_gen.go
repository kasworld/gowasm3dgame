// Code generated by "genprotocol -ver=213afa194ef0e682076c6a0cbf801946c13d343cc54330be7c4557e46057a498 -basedir=. -prefix=w3d -statstype=int"

package w3d_idcmd

import "fmt"

type CommandID uint16 // use in packet header, DO NOT CHANGE
const (
	Invalid     CommandID = iota //
	EnterStage                   //
	ChatToStage                  //
	Heartbeat                    //

	CommandID_Count int = iota
)

var _CommandID2string = [CommandID_Count][2]string{
	Invalid:     {"Invalid", ""},
	EnterStage:  {"EnterStage", ""},
	ChatToStage: {"ChatToStage", ""},
	Heartbeat:   {"Heartbeat", ""},
}

func (e CommandID) String() string {
	if e >= 0 && e < CommandID(CommandID_Count) {
		return _CommandID2string[e][0]
	}
	return fmt.Sprintf("CommandID%d", uint16(e))
}

func (e CommandID) CommentString() string {
	if e >= 0 && e < CommandID(CommandID_Count) {
		return _CommandID2string[e][1]
	}
	return ""
}

var _string2CommandID = map[string]CommandID{
	"Invalid":     Invalid,
	"EnterStage":  EnterStage,
	"ChatToStage": ChatToStage,
	"Heartbeat":   Heartbeat,
}

func String2CommandID(s string) (CommandID, bool) {
	v, b := _string2CommandID[s]
	return v, b
}
