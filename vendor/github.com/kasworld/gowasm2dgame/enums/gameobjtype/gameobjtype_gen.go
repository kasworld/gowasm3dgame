// Code generated by "genenum -typename=GameObjType -packagename=gameobjtype -basedir=enums -statstype=int"

package gameobjtype

import "fmt"

type GameObjType uint8

const (
	Ball          GameObjType = iota //
	Shield                           //
	SuperShield                      //
	HommingShield                    //
	Bullet                           //
	SuperBullet                      //
	HommingBullet                    //

	GameObjType_Count int = iota
)

var _GameObjType2string = [GameObjType_Count][2]string{
	Ball:          {"Ball", ""},
	Shield:        {"Shield", ""},
	SuperShield:   {"SuperShield", ""},
	HommingShield: {"HommingShield", ""},
	Bullet:        {"Bullet", ""},
	SuperBullet:   {"SuperBullet", ""},
	HommingBullet: {"HommingBullet", ""},
}

func (e GameObjType) String() string {
	if e >= 0 && e < GameObjType(GameObjType_Count) {
		return _GameObjType2string[e][0]
	}
	return fmt.Sprintf("GameObjType%d", uint8(e))
}

func (e GameObjType) CommentString() string {
	if e >= 0 && e < GameObjType(GameObjType_Count) {
		return _GameObjType2string[e][1]
	}
	return ""
}

var _string2GameObjType = map[string]GameObjType{
	"Ball":          Ball,
	"Shield":        Shield,
	"SuperShield":   SuperShield,
	"HommingShield": HommingShield,
	"Bullet":        Bullet,
	"SuperBullet":   SuperBullet,
	"HommingBullet": HommingBullet,
}

func String2GameObjType(s string) (GameObjType, bool) {
	v, b := _string2GameObjType[s]
	return v, b
}
